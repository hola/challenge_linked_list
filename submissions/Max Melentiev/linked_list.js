// Generated by CoffeeScript 1.8.0
(function() {
  var LinkedList;

  module.exports = LinkedList = (function() {
    LinkedList._counter = 0;

    function LinkedList(id) {
      if (id == null) {
        id = LinkedList._counter += 1;
      }
      this._prevProp = "_llistPrev" + id;
      this._nextProp = "_llistNext" + id;
    }

    LinkedList.prototype.push = function(item) {
      var target;
      target = this.end;
      if (target) {
        target[this._nextProp] = item;
        item[this._prevProp] = target;
        return this.end = item;
      } else {
        return this.begin = this.end = item;
      }
    };

    LinkedList.prototype.unshift = function(item) {
      if (this.begin) {
        this.begin[this._prevProp] = item;
        item[this._nextProp] = this.begin;
        return this.begin = item;
      } else {
        return this.begin = this.end = item;
      }
    };

    LinkedList.prototype.pop = function() {
      return this.remove(this.end);
    };

    LinkedList.prototype.shift = function() {
      return this.remove(this.begin);
    };

    LinkedList.prototype.remove = function(item) {
      var next, prev;
      if (item) {
        prev = item[this._prevProp];
        next = item[this._nextProp];
        if (item === this.begin) {
          this.begin = next;
        }
        if (item === this.end) {
          this.end = prev;
        }
        if (!(prev || next)) {
          return item;
        }
        if (next != null) {
          next[this._prevProp] = prev;
        }
        if (prev != null) {
          prev[this._nextProp] = next;
        }
        item[this._prevProp] = item[this._nextProp] = null;
        return item;
      }
    };

    LinkedList.prototype.peek = function() {
      return this.begin;
    };

    LinkedList.prototype.isEmpty = function() {
      return !this.begin;
    };

    LinkedList.prototype.append = function(item) {
      return this.push(this.remove(item));
    };

    return LinkedList;

  })();

}).call(this);
