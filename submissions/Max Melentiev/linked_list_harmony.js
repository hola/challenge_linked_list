// Generated by CoffeeScript 1.8.0
(function() {
  var LinkedList;

  module.exports = LinkedList = (function() {
    LinkedList._counter = 0;

    function LinkedList() {
      this.map = new WeakMap;
    }

    LinkedList.prototype.push = function(item) {
      if (this.end) {
        this.map.set(item, [this.end, null]);
        this.map.get(this.end)[1] = item;
        return this.end = item;
      } else {
        this.map.set(item, Array(2));
        return this.begin = this.end = item;
      }
    };

    LinkedList.prototype.unshift = function(item) {
      if (this.begin) {
        this.map.set(item, [null, this.begin]);
        this.map.get(this.begin)[0] = item;
        return this.begin = item;
      } else {
        map.set(item, Array(2));
        return this.begin = this.end = item;
      }
    };

    LinkedList.prototype.pop = function() {
      return this.remove(this.end);
    };

    LinkedList.prototype.shift = function() {
      return this.remove(this.begin);
    };

    LinkedList.prototype.remove = function(item) {
      var links, next, prev;
      links = this.map.get(item);
      if (!links) {
        return item;
      }
      this.map["delete"](item);
      prev = links[0];
      next = links[1];
      if (item === this.begin) {
        this.begin = next;
      }
      if (item === this.end) {
        this.end = prev;
      }
      if (next) {
        this.map.get(next)[0] = prev;
      }
      if (prev) {
        this.map.get(prev)[1] = next;
      }
      return item;
    };

    LinkedList.prototype.peek = function() {
      return this.begin;
    };

    LinkedList.prototype.isEmpty = function() {
      return !this.begin;
    };

    LinkedList.prototype.append = function(item) {
      return this.push(this.remove(item));
    };

    return LinkedList;

  })();

}).call(this);
